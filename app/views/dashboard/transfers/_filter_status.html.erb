<% filters = [
    {
        name: 'transferred',
        class_name: 'transfers-filters--filter--options--transferred__active',
        query: { status_eq: 5, filter: 'transferred' },
        present: params[:q] && params[:q][:filter] == 'transferred'
    }
] %>

<% if @project&.token&.present? %>
  <% filters += [
      {
          name: 'ready',
          class_name: 'transfers-filters--filter--options--ready__active',
          query: {
              :transfer_ready => @project.token._blockchain_before_type_cast,
              filter: 'ready'
          },
          present: params[:q] && params[:q][:filter] == 'ready'
      },
      {
          name: 'blocked – needs wallet',
          class_name: 'transfers-filters--filter--options--blocked__active',
          query: {
              :transfer_blocked_by_wallet => @project.token._blockchain_before_type_cast,
              filter: 'needs_wallet'
          },
          present: params[:q] && params[:q][:filter] == 'needs_wallet'
      }
  ] %>
<% end %>

<% filters += [
    {
        name: 'blocked – AML/KYC failed',
        class_name: 'transfers-filters--filter--options--blocked__active',
        query: { :status_eq => 3, "account_latest_verification_passed_false" => 1, filter: 'aml_kyc_failed' },
        present: params[:q] && params[:q][:filter] == 'aml_kyc_failed'
    },
    {
        name: 'blocked – AML/KYC unknown',
        class_name: 'transfers-filters--filter--options--blocked__active',
        query: { :status_eq => 3, "account_latest_verification_passed_null" => 1, filter: 'aml_kyc_unknown' },
        present: params[:q] && params[:q][:filter] == 'aml_kyc_unknown'
    },
    {
        name: 'cancelled',
        class_name: 'transfers-filters--filter--options--blocked__active',
        query: { :status_eq => 6, filter: 'cancelled' },
        present: params[:q] && params[:q][:filter] == 'cancelled'
    }
] %>

<% all_queries = filters.map { |f| f[:query].keys }.flatten %>
<% current_filter = filters.find { |f| f[:present] } %>

<p class="status-title">Status: </p>
<%= select_tag(
        nil,
        options_for_select(
            filters.map { |f| [f[:name], url_for(request.params.merge(q: (request.params[:q] || {}).except(*all_queries).merge(f[:query])))] },
            current_filter && url_for(request.params.merge(q: (request.params[:q] || {}).except(*all_queries).merge(current_filter[:query])))
        ),
        include_blank: 'All',
        id: 'transfers-filters--filter--options--select',
        class: 'sort-select',
        data: {
            controller: 'gooption',
            action: 'change->gooption#goOption',
            gooption_default_url: url_for(request.params.merge(q: (request.params[:q] || {}).except(*all_queries)))
        }
    ) %>
<svg class="p5-color arrow-down-icon"
     width="14"
     height="8"
     viewBox="0 0 14 8"
     fill="none"
     xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd"
        clip-rule="evenodd"
        d="M0.292893 0.292893C-0.0976311 0.683417 -0.0976312 1.31658 0.292893 1.70711L6.29289 7.70711C6.68342 8.09763 7.31658 8.09763 7.70711 7.70711L13.7071 1.70711C14.0976 1.31658 14.0976 0.683418 13.7071 0.292894C13.3166 -0.0976305 12.6834 -0.0976305 12.2929 0.292894L7 5.58579L1.70711 0.292893C1.31658 -0.097631 0.683418 -0.0976311 0.292893 0.292893Z"
        fill="currentColor">
  </path>
</svg>
