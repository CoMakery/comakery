version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/CoMakery/comakery-app
    docker:
      - image: circleci/ruby:2.6.5-stretch-browsers
        environment:
          NODE_VER: 10.13.0
          YARN_VER: 1.12.3
          ARCH: x64
          BUNDLER_VERSION: 2.0.1
      - image: circleci/postgres:10.10-alpine
    steps:
      - run: wget "https://nodejs.org/dist/v$NODE_VER/node-v$NODE_VER-linux-$ARCH.tar.xz" && sudo tar -xJf "node-v$NODE_VER-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner && rm "node-v$NODE_VER-linux-$ARCH.tar.xz" && sudo ln -s /usr/local/bin/node /usr/local/bin/nodejs
      - run: wget "https://yarnpkg.com/downloads/$YARN_VER/yarn-v$YARN_VER.tar.gz" && sudo mkdir -p /opt && sudo tar -xzf yarn-v$YARN_VER.tar.gz -C /opt/ && sudo ln -s /opt/yarn-v$YARN_VER/bin/yarn /usr/local/bin/yarn && sudo ln -s /opt/yarn-v$YARN_VER/bin/yarnpkg /usr/local/bin/yarnpkg && rm yarn-v$YARN_VER.tar.gz
      - checkout

      - type: cache-restore
        key: comakery-bundle-{{ checksum "Gemfile.lock" }}
      - type: cache-restore
        key: comakery-yarn-{{ checksum "yarn.lock" }}

      - run: sudo gem update --system --no-document
      - run: echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
      - run: source $BASH_ENV
      - run: gem install bundler
      - run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run: bin/yarn install

      - type: cache-save
        key: comakery-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
      - type: cache-save
        key: comakery-yarn-{{ checksum "yarn.lock" }}
        paths:
          - node_modules

      - run: yarn test
      - run: yarn stylelint
      - run: bundle exec rake assets:precompile

      - run: bundle exec rake db:setup
      - run: bundle exec rake data:migrate
      - run: bundle exec citizen checks

      - type: store_artifacts
        path: ./tmp/capybara
      - type: store_artifacts
        path: ./log/test.log
      - type: store_artifacts
        path: coverage
