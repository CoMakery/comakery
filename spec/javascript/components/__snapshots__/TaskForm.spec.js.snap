// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskForm renders correctly without props 1`] = `
<TaskForm
  batch={
    Object {
      "default": "_",
    }
  }
  csrfToken="00"
  experienceLevels={
    Object {
      "default": "_",
    }
  }
  formAction="POST"
  formUrl="/"
  project={
    Object {
      "default": "_",
    }
  }
  specialties={
    Object {
      "default": "_",
    }
  }
  task={
    Object {
      "default": "_",
    }
  }
  token={
    Object {
      "default": "_",
    }
  }
  urlOnSuccess="/"
>
  <ProjectSetup
    className="task-form"
    hasBackButton={true}
    projectId={null}
    projectPage="batches"
    projectTitle=""
    sidebar={
      <React.Fragment>
        <div
          className="batch-index--sidebar"
        >
          <SidebarItem
            className="batch-index--sidebar--item batch-index--sidebar--item__form"
            iconLeftName="BATCH/ACTIVE.GRADIENT.svg"
            iconLeftUrl=""
            iconRightName=""
            notificationColor=""
            selected={true}
            text="sidebar item"
          />
          <hr
            className="batch-index--sidebar--hr"
          />
        </div>
      </React.Fragment>
    }
    subfooter={
      <React.Fragment>
        <Button
          className=""
          disabled={false}
          form="task-form--form"
          onClick={[Function]}
          type="submit"
          value="create & close"
        />
        <ButtonBorder
          className=""
          form="task-form--form"
          onClick={[Function]}
          type="submit"
          value="create"
        />
        <ButtonBorder
          className=""
          onClick={[Function]}
          value="cancel"
        />
      </React.Fragment>
    }
  >
    <Layout
      category=""
      className="project-setup task-form"
      customTitle={
        <ProjectSetupHeader
          projectId={null}
          projectOwner={true}
          projectPage="batches"
          projectTitle=""
        />
      }
      hasBackButton={true}
      sidebar={
        <React.Fragment>
          <div
            className="batch-index--sidebar"
          >
            <SidebarItem
              className="batch-index--sidebar--item batch-index--sidebar--item__form"
              iconLeftName="BATCH/ACTIVE.GRADIENT.svg"
              iconLeftUrl=""
              iconRightName=""
              notificationColor=""
              selected={true}
              text="sidebar item"
            />
            <hr
              className="batch-index--sidebar--hr"
            />
          </div>
        </React.Fragment>
      }
      subfooter={
        <React.Fragment>
          <Button
            className=""
            disabled={false}
            form="task-form--form"
            onClick={[Function]}
            type="submit"
            value="create & close"
          />
          <ButtonBorder
            className=""
            form="task-form--form"
            onClick={[Function]}
            type="submit"
            value="create"
          />
          <ButtonBorder
            className=""
            onClick={[Function]}
            value="cancel"
          />
        </React.Fragment>
      }
      title={null}
    >
      <div
        className="layout project-setup task-form"
      >
        <div
          className="layout--back-button"
        >
          <Icon
            className=""
            name="iconCloseCopy.svg"
            onClick={[Function]}
          >
            <img
              className="icon icon__iconCloseCopy-svg"
              onClick={[Function]}
              src="test-file-stub"
            />
          </Icon>
        </div>
        <div
          className="layout--content"
        >
          <div
            className="layout--content--title"
          >
            <ProjectSetupHeader
              projectId={null}
              projectOwner={true}
              projectPage="batches"
              projectTitle=""
            >
              <div
                className="layout--content--title--header"
              />
              <span
                className="layout--content--title--nav"
              >
                <a
                  href="#"
                >
                  project settings
                </a>
              </span>
              <span
                className="layout--content--title--nav__current"
              >
                <a
                  href="#"
                >
                  batches & tasks
                </a>
              </span>
              <span
                className="layout--content--title--nav"
              >
                <a
                  href="#"
                >
                  contributors
                </a>
              </span>
              <span
                className="layout--content--title--nav"
              >
                <a
                  href="#"
                >
                  payments
                </a>
              </span>
              <span
                className="layout--content--title--nav"
              >
                <a
                  href="#"
                >
                  overview
                </a>
              </span>
            </ProjectSetupHeader>
          </div>
          <hr
            className="layout--content--hr"
          />
          <div
            className="layout--content--wrapper"
          >
            <div
              className="layout--content--sidebar"
            >
              <div
                className="batch-index--sidebar"
              >
                <SidebarItem
                  className="batch-index--sidebar--item batch-index--sidebar--item__form"
                  iconLeftName="BATCH/ACTIVE.GRADIENT.svg"
                  iconLeftUrl=""
                  iconRightName=""
                  notificationColor=""
                  selected={true}
                  text="sidebar item"
                >
                  <div
                    className="sidebar-item--wrapper"
                  >
                    <div
                      className="sidebar-item sidebar-item__selected batch-index--sidebar--item batch-index--sidebar--item__form"
                    >
                      <span
                        className="sidebar-item--icon-left"
                      >
                        <Icon
                          className=""
                          name="BATCH/ACTIVE.GRADIENT.svg"
                        >
                          <img
                            className="icon icon__BATCH/ACTIVE-GRADIENT.svg"
                            src="test-file-stub"
                          />
                        </Icon>
                      </span>
                      <span
                        className="sidebar-item--text"
                      >
                        sidebar item
                      </span>
                      <div
                        className="sidebar-item--left-border"
                      />
                      <div
                        className="sidebar-item--right-border sidebar-item--right-border__"
                      />
                    </div>
                  </div>
                </SidebarItem>
                <hr
                  className="batch-index--sidebar--hr"
                />
              </div>
            </div>
            <div
              className="layout--content--content__sidebared"
            >
              <Flash
                className=""
                messages={Array []}
              >
                <div
                  className="flash-message-container"
                />
              </Flash>
              <div
                className="task-form--form--title"
              >
                Create a New Task
              </div>
              <form
                className="task-form--form"
                id="task-form--form"
                onSubmit={[Function]}
              >
                <InputFieldWhiteDark
                  eventHandler={[Function]}
                  name="task[name]"
                  placeholder="Provide a clear title for the Task"
                  required={true}
                  symbolLimit={100}
                  title="name"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__white__dark"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[name]"
                    pattern=".*"
                    placeholder="Provide a clear title for the Task"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step=""
                    symbolLimit={100}
                    title="name"
                    type="text"
                    value=""
                  >
                    <div
                      className="input-field input-field__white__dark"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          name
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                        <span
                          className="input-field--title--counter"
                        >
                          0
                          /
                          100
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          className="input-field--content__text"
                          name="task[name]"
                          onChange={[Function]}
                          onClick={null}
                          pattern=".*"
                          placeholder="Provide a clear title for the Task"
                          readOnly={false}
                          required={true}
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldWhiteDark>
                <InputFieldDescription
                  eventHandler={[Function]}
                  name="task[why]"
                  placeholder="Use the following format to describe the expected benefit of this task being completed: As a ___, I want to ___,  So I can  ___. Example: As a new user, I want to be able to sign up, so I can claim my 10% discount."
                  required={true}
                  symbolLimit={500}
                  title="WHAT IS THE EXPECTED BENEFIT"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__description"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[why]"
                    pattern=".*"
                    placeholder="Use the following format to describe the expected benefit of this task being completed: As a ___, I want to ___,  So I can  ___. Example: As a new user, I want to be able to sign up, so I can claim my 10% discount."
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step=""
                    symbolLimit={500}
                    title="WHAT IS THE EXPECTED BENEFIT"
                    type="textarea"
                    value=""
                  >
                    <div
                      className="input-field input-field__description"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          WHAT IS THE EXPECTED BENEFIT
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                        <span
                          className="input-field--title--counter"
                        >
                          0
                          /
                          500
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <textarea
                          className="input-field--content__text"
                          name="task[why]"
                          onChange={[Function]}
                          pattern=".*"
                          placeholder="Use the following format to describe the expected benefit of this task being completed: As a ___, I want to ___,  So I can  ___. Example: As a new user, I want to be able to sign up, so I can claim my 10% discount."
                          readOnly={false}
                          required={true}
                          value=""
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldDescription>
                <InputFieldDescriptionLarge
                  eventHandler={[Function]}
                  name="task[requirements]"
                  placeholder="Create bullet points for each acceptance criteria by starting a line with an asterisk (markdown format). These bullet points will be used by reviewers to verify the work."
                  required={true}
                  symbolLimit={1000}
                  title="acceptance requirements"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__description-large"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[requirements]"
                    pattern=".*"
                    placeholder="Create bullet points for each acceptance criteria by starting a line with an asterisk (markdown format). These bullet points will be used by reviewers to verify the work."
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step=""
                    symbolLimit={1000}
                    title="acceptance requirements"
                    type="textarea"
                    value=""
                  >
                    <div
                      className="input-field input-field__description-large"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          acceptance requirements
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                        <span
                          className="input-field--title--counter"
                        >
                          0
                          /
                          1000
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <textarea
                          className="input-field--content__text"
                          name="task[requirements]"
                          onChange={[Function]}
                          pattern=".*"
                          placeholder="Create bullet points for each acceptance criteria by starting a line with an asterisk (markdown format). These bullet points will be used by reviewers to verify the work."
                          readOnly={false}
                          required={true}
                          value=""
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldDescriptionLarge>
                <InputFieldDescriptionLarge
                  eventHandler={[Function]}
                  name="task[description]"
                  placeholder="Provide a longer description about the task, the type of work involved, and how it will relate to the larger batch"
                  symbolLimit={500}
                  title="description"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__description-large"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[description]"
                    pattern=".*"
                    placeholder="Provide a longer description about the task, the type of work involved, and how it will relate to the larger batch"
                    readOnly={false}
                    recommended={false}
                    required={false}
                    selectEntries={Array []}
                    step=""
                    symbolLimit={500}
                    title="description"
                    type="textarea"
                    value=""
                  >
                    <div
                      className="input-field input-field__description-large"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          description
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          optional
                        </span>
                        <span
                          className="input-field--title--counter"
                        >
                          0
                          /
                          500
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <textarea
                          className="input-field--content__text"
                          name="task[description]"
                          onChange={[Function]}
                          pattern=".*"
                          placeholder="Provide a longer description about the task, the type of work involved, and how it will relate to the larger batch"
                          readOnly={false}
                          required={false}
                          value=""
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldDescriptionLarge>
                <InputFieldUploadFile
                  imgPreviewDimensions="100x100"
                  name="task[image]"
                  title="image asset to help guide the task"
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__upload-file"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="100x100"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[image]"
                    pattern=".*"
                    placeholder="Please enter value"
                    readOnly={false}
                    recommended={false}
                    required={false}
                    selectEntries={Array []}
                    step=""
                    symbolLimit={0}
                    title="image asset to help guide the task"
                    type="file"
                    value=""
                  >
                    <div
                      className="input-field input-field__upload-file"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          image asset to help guide the task
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          optional
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          accept="image/*"
                          className="input-field--content__file"
                          name="task[image]"
                          onChange={[Function]}
                          required={false}
                          type="file"
                        />
                        <span
                          className="input-field--content__file--requirements"
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldUploadFile>
                <InputFieldDropdown
                  eventHandler={[Function]}
                  name="task[specialty_id]"
                  required={true}
                  selectEntries={
                    Array [
                      Array [
                        "default",
                        "_",
                      ],
                    ]
                  }
                  symbolLimit={0}
                  title="specialty"
                  value="_"
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__dropdown"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[specialty_id]"
                    pattern=".*"
                    placeholder="Please enter value"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={
                      Array [
                        Array [
                          "default",
                          "_",
                        ],
                      ]
                    }
                    step=""
                    symbolLimit={0}
                    title="specialty"
                    type="select"
                    value="_"
                  >
                    <div
                      className="input-field input-field__dropdown"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          specialty
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <select
                          className="input-field--content__select"
                          disabled={false}
                          name="task[specialty_id]"
                          onChange={[Function]}
                          required={true}
                          value="_"
                        >
                          <option
                            key="_"
                            value="_"
                          >
                            default
                          </option>
                        </select>
                      </div>
                    </div>
                  </InputField>
                </InputFieldDropdown>
                <InputFieldDropdown
                  eventHandler={[Function]}
                  name="task[experience_level]"
                  required={true}
                  selectEntries={
                    Array [
                      Array [
                        "default",
                        "_",
                      ],
                    ]
                  }
                  symbolLimit={0}
                  title="skill confirmations required"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__dropdown"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[experience_level]"
                    pattern=".*"
                    placeholder="Please enter value"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={
                      Array [
                        Array [
                          "default",
                          "_",
                        ],
                      ]
                    }
                    step=""
                    symbolLimit={0}
                    title="skill confirmations required"
                    type="select"
                    value=""
                  >
                    <div
                      className="input-field input-field__dropdown"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          skill confirmations required
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <select
                          className="input-field--content__select"
                          disabled={false}
                          name="task[experience_level]"
                          onChange={[Function]}
                          required={true}
                          value=""
                        >
                          <option
                            key="_"
                            value="_"
                          >
                            default
                          </option>
                        </select>
                      </div>
                    </div>
                  </InputField>
                </InputFieldDropdown>
                <InputFieldWhiteDark
                  eventHandler={[Function]}
                  min="0"
                  name="task[amount]"
                  placeholder="The total amount of tokens or coins you are paying for this task to be completed"
                  required={true}
                  step="NaN"
                  symbolLimit={0}
                  title="award amount (no token)"
                  type="number"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__white__dark"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min="0"
                    name="task[amount]"
                    pattern=".*"
                    placeholder="The total amount of tokens or coins you are paying for this task to be completed"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step="NaN"
                    symbolLimit={0}
                    title="award amount (no token)"
                    type="number"
                    value=""
                  >
                    <div
                      className="input-field input-field__white__dark"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          award amount (no token)
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          className="input-field--content__text"
                          max=""
                          min="0"
                          name="task[amount]"
                          onChange={[Function]}
                          onClick={null}
                          placeholder="The total amount of tokens or coins you are paying for this task to be completed"
                          readOnly={false}
                          required={true}
                          step="NaN"
                          type="number"
                          value=""
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldWhiteDark>
                <InputFieldWhiteDark
                  eventHandler={[Function]}
                  min="1"
                  name="task[number_of_assignments]"
                  placeholder="1"
                  required={true}
                  step="1"
                  symbolLimit={0}
                  title="how many times can this task be done"
                  type="number"
                  value={1}
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__white__dark"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min="1"
                    name="task[number_of_assignments]"
                    pattern=".*"
                    placeholder="1"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step="1"
                    symbolLimit={0}
                    title="how many times can this task be done"
                    type="number"
                    value={1}
                  >
                    <div
                      className="input-field input-field__white__dark"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          how many times can this task be done
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          className="input-field--content__text"
                          max=""
                          min="1"
                          name="task[number_of_assignments]"
                          onChange={[Function]}
                          onClick={null}
                          placeholder="1"
                          readOnly={false}
                          required={true}
                          step="1"
                          type="number"
                          value={1}
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldWhiteDark>
                <InputFieldWhiteDark
                  eventHandler={[Function]}
                  min="1"
                  name="task[number_of_assignments_per_user]"
                  placeholder="1"
                  readOnly={false}
                  required={true}
                  step="1"
                  symbolLimit={0}
                  title="how many times can this task be done by a single user"
                  type="number"
                  value={1}
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__white__dark"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min="1"
                    name="task[number_of_assignments_per_user]"
                    pattern=".*"
                    placeholder="1"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step="1"
                    symbolLimit={0}
                    title="how many times can this task be done by a single user"
                    type="number"
                    value={1}
                  >
                    <div
                      className="input-field input-field__white__dark"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          how many times can this task be done by a single user
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          className="input-field--content__text"
                          max=""
                          min="1"
                          name="task[number_of_assignments_per_user]"
                          onChange={[Function]}
                          onClick={null}
                          placeholder="1"
                          readOnly={false}
                          required={true}
                          step="1"
                          type="number"
                          value={1}
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldWhiteDark>
                <InputFieldWhiteDark
                  eventHandler={[Function]}
                  min="1"
                  name="task[expires_in_days]"
                  placeholder="10"
                  required={true}
                  step="1"
                  symbolLimit={0}
                  title="days till task expires (after starting)"
                  type="number"
                  value={10}
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__white__dark"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min="1"
                    name="task[expires_in_days]"
                    pattern=".*"
                    placeholder="10"
                    readOnly={false}
                    recommended={false}
                    required={true}
                    selectEntries={Array []}
                    step="1"
                    symbolLimit={0}
                    title="days till task expires (after starting)"
                    type="number"
                    value={10}
                  >
                    <div
                      className="input-field input-field__white__dark"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          days till task expires (after starting)
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          required
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          className="input-field--content__text"
                          max=""
                          min="1"
                          name="task[expires_in_days]"
                          onChange={[Function]}
                          onClick={null}
                          placeholder="10"
                          readOnly={false}
                          required={true}
                          step="1"
                          type="number"
                          value={10}
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldWhiteDark>
                <InputFieldWhiteDark
                  eventHandler={[Function]}
                  name="task[proof_link]"
                  placeholder="URL to a Dropbox or Drive Folder, or a GitHub Repo (http://example.com)"
                  symbolLimit={150}
                  title="URL where to submit completed work"
                  value=""
                >
                  <InputField
                    checkboxText=""
                    checked={false}
                    className="input-field__white__dark"
                    copyOnClick={false}
                    disabled={false}
                    errorText=""
                    eventHandler={[Function]}
                    imgInputRef={null}
                    imgPreviewDimensions="40x40"
                    imgPreviewUrl=""
                    imgRequirements=""
                    imgVerifier={[Function]}
                    max=""
                    min=""
                    name="task[proof_link]"
                    pattern=".*"
                    placeholder="URL to a Dropbox or Drive Folder, or a GitHub Repo (http://example.com)"
                    readOnly={false}
                    recommended={false}
                    required={false}
                    selectEntries={Array []}
                    step=""
                    symbolLimit={150}
                    title="URL where to submit completed work"
                    type="text"
                    value=""
                  >
                    <div
                      className="input-field input-field__white__dark"
                    >
                      <div
                        className="input-field--title"
                      >
                        <span
                          className="input-field--title--title"
                        >
                          URL where to submit completed work
                        </span>
                        <span
                          className="input-field--title--required"
                        >
                          optional
                        </span>
                        <span
                          className="input-field--title--counter"
                        >
                          0
                          /
                          150
                        </span>
                      </div>
                      <div
                        className="input-field--content"
                      >
                        <input
                          className="input-field--content__text"
                          name="task[proof_link]"
                          onChange={[Function]}
                          onClick={null}
                          pattern=".*"
                          placeholder="URL to a Dropbox or Drive Folder, or a GitHub Repo (http://example.com)"
                          readOnly={false}
                          required={false}
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </InputField>
                </InputFieldWhiteDark>
                <input
                  name="authenticity_token"
                  readOnly={true}
                  type="hidden"
                  value="00"
                />
              </form>
            </div>
          </div>
        </div>
        <div
          className="layout--subfooter"
        >
          <div
            className="layout--subfooter--buttons"
          >
            <Button
              className=""
              disabled={false}
              form="task-form--form"
              onClick={[Function]}
              type="submit"
              value="create & close"
            >
              <input
                className="button"
                disabled={false}
                form="task-form--form"
                onClick={[Function]}
                type="submit"
                value="create & close"
              />
            </Button>
            <ButtonBorder
              className=""
              form="task-form--form"
              onClick={[Function]}
              type="submit"
              value="create"
            >
              <Button
                className="button__border"
                disabled={false}
                form="task-form--form"
                onClick={[Function]}
                type="submit"
                value="create"
              >
                <input
                  className="button button__border"
                  disabled={false}
                  form="task-form--form"
                  onClick={[Function]}
                  type="submit"
                  value="create"
                />
              </Button>
            </ButtonBorder>
            <ButtonBorder
              className=""
              onClick={[Function]}
              value="cancel"
            >
              <Button
                className="button__border"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="cancel"
              >
                <input
                  className="button button__border"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="cancel"
                />
              </Button>
            </ButtonBorder>
          </div>
        </div>
      </div>
    </Layout>
  </ProjectSetup>
</TaskForm>
`;
