// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskForm renders correctly without props 1`] = `
<TaskForm
  csrfToken="00"
  formAction="POST"
  formUrl="/"
  task={
    Object {
      "default": "_",
    }
  }
  token={
    Object {
      "default": "_",
    }
  }
  urlOnSuccess="/"
>
  <Layout
    category=""
    className="task-form"
    hasBackButton={true}
    navTitle={null}
    sidebar={null}
    subfooter={
      <React.Fragment>
        <Button
          className=""
          disabled={false}
          form="task-form--form"
          onClick={[Function]}
          type="submit"
          value="create & close"
        />
        <ButtonBorder
          className=""
          form="task-form--form"
          onClick={[Function]}
          type="submit"
          value="create"
        />
        <ButtonBorder
          className=""
          onClick={[Function]}
          value="cancel"
        />
      </React.Fragment>
    }
    title="Create a New Task"
  >
    <div
      className="layout task-form"
    >
      <div
        className="layout--back-button"
      >
        <Icon
          className=""
          name="iconCloseCopy.svg"
          onClick={[Function]}
        >
          <img
            className="icon icon__iconCloseCopy-svg"
            onClick={[Function]}
            src="test-file-stub"
          />
        </Icon>
      </div>
      <div
        className="layout--content"
      >
        <div
          className="layout--content--title"
        >
          Create a New Task
        </div>
        <hr
          className="layout--content--hr"
        />
        <div
          className="layout--content--wrapper"
        >
          <div
            className="layout--content--content"
          >
            <Flash
              className=""
              messages={Array []}
            >
              <div
                className="flash-message-container"
              />
            </Flash>
            <form
              className="task-form--form"
              id="task-form--form"
              onSubmit={[Function]}
            >
              <InputFieldWhiteDark
                eventHandler={[Function]}
                name="task[name]"
                placeholder="Provide a clear title for the Task"
                required={true}
                symbolLimit={100}
                title="name"
                value=""
              >
                <InputField
                  checkboxText=""
                  checked={false}
                  className="input-field__white__dark"
                  copyOnClick={false}
                  disabled={false}
                  errorText=""
                  eventHandler={[Function]}
                  imgInputRef={null}
                  imgPreviewDimensions="40x40"
                  imgPreviewUrl=""
                  imgRequirements=""
                  imgVerifier={[Function]}
                  max=""
                  min=""
                  name="task[name]"
                  pattern=".*"
                  placeholder="Provide a clear title for the Task"
                  readOnly={false}
                  recommended={false}
                  required={true}
                  selectEntries={Array []}
                  step=""
                  symbolLimit={100}
                  title="name"
                  type="text"
                  value=""
                >
                  <div
                    className="input-field input-field__white__dark"
                  >
                    <div
                      className="input-field--title"
                    >
                      <span
                        className="input-field--title--title"
                      >
                        name
                      </span>
                      <span
                        className="input-field--title--required"
                      >
                        required
                      </span>
                      <span
                        className="input-field--title--counter"
                      >
                        0
                        /
                        100
                      </span>
                    </div>
                    <div
                      className="input-field--content"
                    >
                      <input
                        className="input-field--content__text"
                        name="task[name]"
                        onChange={[Function]}
                        onClick={null}
                        pattern=".*"
                        placeholder="Provide a clear title for the Task"
                        readOnly={false}
                        required={true}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </InputField>
              </InputFieldWhiteDark>
              <InputFieldDescriptionMiddle
                eventHandler={[Function]}
                name="task[why]"
                placeholder="Let people know what will be the result of this task being completed (ex: When task is finished, the result will be xxxx)"
                required={true}
                symbolLimit={500}
                title="why"
                value=""
              >
                <InputField
                  checkboxText=""
                  checked={false}
                  className="input-field__description-middle"
                  copyOnClick={false}
                  disabled={false}
                  errorText=""
                  eventHandler={[Function]}
                  imgInputRef={null}
                  imgPreviewDimensions="40x40"
                  imgPreviewUrl=""
                  imgRequirements=""
                  imgVerifier={[Function]}
                  max=""
                  min=""
                  name="task[why]"
                  pattern=".*"
                  placeholder="Let people know what will be the result of this task being completed (ex: When task is finished, the result will be xxxx)"
                  readOnly={false}
                  recommended={false}
                  required={true}
                  selectEntries={Array []}
                  step=""
                  symbolLimit={500}
                  title="why"
                  type="textarea"
                  value=""
                >
                  <div
                    className="input-field input-field__description-middle"
                  >
                    <div
                      className="input-field--title"
                    >
                      <span
                        className="input-field--title--title"
                      >
                        why
                      </span>
                      <span
                        className="input-field--title--required"
                      >
                        required
                      </span>
                      <span
                        className="input-field--title--counter"
                      >
                        0
                        /
                        500
                      </span>
                    </div>
                    <div
                      className="input-field--content"
                    >
                      <textarea
                        className="input-field--content__text"
                        name="task[why]"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder="Let people know what will be the result of this task being completed (ex: When task is finished, the result will be xxxx)"
                        readOnly={false}
                        required={true}
                        value=""
                      />
                    </div>
                  </div>
                </InputField>
              </InputFieldDescriptionMiddle>
              <InputFieldDescriptionMiddle
                eventHandler={[Function]}
                name="task[description]"
                placeholder="Provide a longer description about the task, the type of work involved, and how it will relate to the larger batch"
                required={true}
                symbolLimit={500}
                title="description"
                value=""
              >
                <InputField
                  checkboxText=""
                  checked={false}
                  className="input-field__description-middle"
                  copyOnClick={false}
                  disabled={false}
                  errorText=""
                  eventHandler={[Function]}
                  imgInputRef={null}
                  imgPreviewDimensions="40x40"
                  imgPreviewUrl=""
                  imgRequirements=""
                  imgVerifier={[Function]}
                  max=""
                  min=""
                  name="task[description]"
                  pattern=".*"
                  placeholder="Provide a longer description about the task, the type of work involved, and how it will relate to the larger batch"
                  readOnly={false}
                  recommended={false}
                  required={true}
                  selectEntries={Array []}
                  step=""
                  symbolLimit={500}
                  title="description"
                  type="textarea"
                  value=""
                >
                  <div
                    className="input-field input-field__description-middle"
                  >
                    <div
                      className="input-field--title"
                    >
                      <span
                        className="input-field--title--title"
                      >
                        description
                      </span>
                      <span
                        className="input-field--title--required"
                      >
                        required
                      </span>
                      <span
                        className="input-field--title--counter"
                      >
                        0
                        /
                        500
                      </span>
                    </div>
                    <div
                      className="input-field--content"
                    >
                      <textarea
                        className="input-field--content__text"
                        name="task[description]"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder="Provide a longer description about the task, the type of work involved, and how it will relate to the larger batch"
                        readOnly={false}
                        required={true}
                        value=""
                      />
                    </div>
                  </div>
                </InputField>
              </InputFieldDescriptionMiddle>
              <InputFieldDescription
                eventHandler={[Function]}
                name="task[requirements]"
                placeholder="This section is free text that allows for the use of markdown. Create bullets using an asterick and a space before each sentence. Make sure to list a bullet point for each acceptance criteria. These bullet points will be used by reviewers to verify the work."
                required={true}
                symbolLimit={750}
                title="acceptance requirements"
                value=""
              >
                <InputField
                  checkboxText=""
                  checked={false}
                  className="input-field__description"
                  copyOnClick={false}
                  disabled={false}
                  errorText=""
                  eventHandler={[Function]}
                  imgInputRef={null}
                  imgPreviewDimensions="40x40"
                  imgPreviewUrl=""
                  imgRequirements=""
                  imgVerifier={[Function]}
                  max=""
                  min=""
                  name="task[requirements]"
                  pattern=".*"
                  placeholder="This section is free text that allows for the use of markdown. Create bullets using an asterick and a space before each sentence. Make sure to list a bullet point for each acceptance criteria. These bullet points will be used by reviewers to verify the work."
                  readOnly={false}
                  recommended={false}
                  required={true}
                  selectEntries={Array []}
                  step=""
                  symbolLimit={750}
                  title="acceptance requirements"
                  type="textarea"
                  value=""
                >
                  <div
                    className="input-field input-field__description"
                  >
                    <div
                      className="input-field--title"
                    >
                      <span
                        className="input-field--title--title"
                      >
                        acceptance requirements
                      </span>
                      <span
                        className="input-field--title--required"
                      >
                        required
                      </span>
                      <span
                        className="input-field--title--counter"
                      >
                        0
                        /
                        750
                      </span>
                    </div>
                    <div
                      className="input-field--content"
                    >
                      <textarea
                        className="input-field--content__text"
                        name="task[requirements]"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder="This section is free text that allows for the use of markdown. Create bullets using an asterick and a space before each sentence. Make sure to list a bullet point for each acceptance criteria. These bullet points will be used by reviewers to verify the work."
                        readOnly={false}
                        required={true}
                        value=""
                      />
                    </div>
                  </div>
                </InputField>
              </InputFieldDescription>
              <InputFieldWhiteDark
                eventHandler={[Function]}
                min="0"
                name="task[amount]"
                placeholder="The total amount of tokens or coins you are paying for this task to be completed"
                required={true}
                step="NaN"
                symbolLimit={0}
                title="award amount (undefined)"
                type="number"
                value=""
              >
                <InputField
                  checkboxText=""
                  checked={false}
                  className="input-field__white__dark"
                  copyOnClick={false}
                  disabled={false}
                  errorText=""
                  eventHandler={[Function]}
                  imgInputRef={null}
                  imgPreviewDimensions="40x40"
                  imgPreviewUrl=""
                  imgRequirements=""
                  imgVerifier={[Function]}
                  max=""
                  min="0"
                  name="task[amount]"
                  pattern=".*"
                  placeholder="The total amount of tokens or coins you are paying for this task to be completed"
                  readOnly={false}
                  recommended={false}
                  required={true}
                  selectEntries={Array []}
                  step="NaN"
                  symbolLimit={0}
                  title="award amount (undefined)"
                  type="number"
                  value=""
                >
                  <div
                    className="input-field input-field__white__dark"
                  >
                    <div
                      className="input-field--title"
                    >
                      <span
                        className="input-field--title--title"
                      >
                        award amount (undefined)
                      </span>
                      <span
                        className="input-field--title--required"
                      >
                        required
                      </span>
                    </div>
                    <div
                      className="input-field--content"
                    >
                      <input
                        className="input-field--content__text"
                        max=""
                        min="0"
                        name="task[amount]"
                        onChange={[Function]}
                        onClick={null}
                        placeholder="The total amount of tokens or coins you are paying for this task to be completed"
                        readOnly={false}
                        required={true}
                        step="NaN"
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </InputField>
              </InputFieldWhiteDark>
              <InputFieldWhiteDark
                eventHandler={[Function]}
                name="task[proof_link]"
                placeholder="URL to a Dropbox or Drive Folder, or a GitHub Repo"
                required={true}
                symbolLimit={150}
                title="where to submit completed work"
                value=""
              >
                <InputField
                  checkboxText=""
                  checked={false}
                  className="input-field__white__dark"
                  copyOnClick={false}
                  disabled={false}
                  errorText=""
                  eventHandler={[Function]}
                  imgInputRef={null}
                  imgPreviewDimensions="40x40"
                  imgPreviewUrl=""
                  imgRequirements=""
                  imgVerifier={[Function]}
                  max=""
                  min=""
                  name="task[proof_link]"
                  pattern=".*"
                  placeholder="URL to a Dropbox or Drive Folder, or a GitHub Repo"
                  readOnly={false}
                  recommended={false}
                  required={true}
                  selectEntries={Array []}
                  step=""
                  symbolLimit={150}
                  title="where to submit completed work"
                  type="text"
                  value=""
                >
                  <div
                    className="input-field input-field__white__dark"
                  >
                    <div
                      className="input-field--title"
                    >
                      <span
                        className="input-field--title--title"
                      >
                        where to submit completed work
                      </span>
                      <span
                        className="input-field--title--required"
                      >
                        required
                      </span>
                      <span
                        className="input-field--title--counter"
                      >
                        0
                        /
                        150
                      </span>
                    </div>
                    <div
                      className="input-field--content"
                    >
                      <input
                        className="input-field--content__text"
                        name="task[proof_link]"
                        onChange={[Function]}
                        onClick={null}
                        pattern=".*"
                        placeholder="URL to a Dropbox or Drive Folder, or a GitHub Repo"
                        readOnly={false}
                        required={true}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </InputField>
              </InputFieldWhiteDark>
              <input
                name="authenticity_token"
                readOnly={true}
                type="hidden"
                value="00"
              />
            </form>
          </div>
        </div>
      </div>
      <div
        className="layout--subfooter"
      >
        <div
          className="layout--subfooter--buttons"
        >
          <Button
            className=""
            disabled={false}
            form="task-form--form"
            onClick={[Function]}
            type="submit"
            value="create & close"
          >
            <input
              className="button"
              disabled={false}
              form="task-form--form"
              onClick={[Function]}
              type="submit"
              value="create & close"
            />
          </Button>
          <ButtonBorder
            className=""
            form="task-form--form"
            onClick={[Function]}
            type="submit"
            value="create"
          >
            <Button
              className="button__border"
              disabled={false}
              form="task-form--form"
              onClick={[Function]}
              type="submit"
              value="create"
            >
              <input
                className="button button__border"
                disabled={false}
                form="task-form--form"
                onClick={[Function]}
                type="submit"
                value="create"
              />
            </Button>
          </ButtonBorder>
          <ButtonBorder
            className=""
            onClick={[Function]}
            value="cancel"
          >
            <Button
              className="button__border"
              disabled={false}
              onClick={[Function]}
              type="button"
              value="cancel"
            >
              <input
                className="button button__border"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="cancel"
              />
            </Button>
          </ButtonBorder>
        </div>
      </div>
    </div>
  </Layout>
</TaskForm>
`;
