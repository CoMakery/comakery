// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Task renders component correctly 1`] = `
<Task
  task={
    Object {
      "contributor": Object {
        "image": null,
        "name": null,
      },
      "status": null,
    }
  }
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htoDjs",
            "isStatic": true,
            "lastClassName": "fnSdtm",
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);
  height: 60px;
  margin-bottom: 10px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htoDjs",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htoDjs fnSdtm"
      >
        <styled.div
          status={null}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": false,
                  "lastClassName": "cQwWcg",
                  "rules": Array [
                    "
  width: 2px;
  height: 60px;
  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, .2);
  background-color: #5037f7;
  z-index: 10;
  position: absolute;
  margin-left: -1px;

  ",
                    [Function],
                    "

  ",
                    [Function],
                    "

  ",
                    [Function],
                    "

  ",
                    [Function],
                    "

  ",
                    [Function],
                    "

  ",
                    [Function],
                    "
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            status={null}
          >
            <div
              className="sc-dnqmqq cQwWcg"
            />
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-iwsKbI",
                  "isStatic": true,
                  "lastClassName": "cUoQNA",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-iwsKbI",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-iwsKbI cUoQNA"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjdhpX",
                        "isStatic": true,
                        "lastClassName": "dtUahH",
                        "rules": Array [
                          "
  padding: 7px 20px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjdhpX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-fjdhpX dtUahH"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gZMcBi",
                              "isStatic": true,
                              "lastClassName": "bdClgB",
                              "rules": Array [
                                "
  font-family: Montserrat;
  font-size: 14px;
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  color: #3a3a3a;
  padding-bottom: 8px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gZMcBi",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gZMcBi bdClgB"
                        />
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gqjmRU",
                              "isStatic": true,
                              "lastClassName": "iRDvLn",
                              "rules": Array [
                                "
  display: flex;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gqjmRU",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gqjmRU iRDvLn"
                        >
                          <styled.div
                            status={null}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-VigVT",
                                    "isStatic": false,
                                    "lastClassName": "gpVGwb",
                                    "rules": Array [
                                      "
  font-family: Montserrat;
  font-size: 10px;
  font-weight: bold;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  text-transform: uppercase;
  margin-right: 2em;

  ",
                                      [Function],
                                      "

  ",
                                      [Function],
                                      "

  ",
                                      [Function],
                                      "

  ",
                                      [Function],
                                      "

  ",
                                      [Function],
                                      "

  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-VigVT",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              status={null}
                            >
                              <div
                                className="sc-VigVT gpVGwb"
                              />
                            </StyledComponent>
                          </styled.div>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzJRlG",
                        "isStatic": true,
                        "lastClassName": "hidtVc",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: space-between;
  padding-right: 15px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jzJRlG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jzJRlG hidtVc"
                  >
                    <Styled(CurrencyAmount)>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-cSHVUG",
                              "isStatic": true,
                              "lastClassName": "bubdaT",
                              "rules": Array [
                                "
",
                              ],
                            },
                            "displayName": "Styled(CurrencyAmount)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-cSHVUG",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <CurrencyAmount
                          amount=""
                          className="sc-cSHVUG bubdaT"
                          currency=""
                          logoUrl=""
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-ifAKCX",
                                    "isStatic": true,
                                    "lastClassName": "ezuxay",
                                    "rules": Array [
                                      "
  display: flex;
  flex-direction: row;
  align-items: center;
  font-family: Montserrat;
  font-size: 14px;
  font-weight: bold;
  color: #201662;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-ifAKCX",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="sc-ifAKCX ezuxay"
                              >
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-EHOje",
                                          "isStatic": true,
                                          "lastClassName": "iqtoiU",
                                          "rules": Array [
                                            "
  margin-right: 0.5em;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-EHOje",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-EHOje iqtoiU"
                                    />
                                  </StyledComponent>
                                </styled.div>
                                <styled.div>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bZQynM",
                                          "isStatic": true,
                                          "lastClassName": "kVrOBi",
                                          "rules": Array [
                                            "
  margin-right: 0.5em;
  text-transform: uppercase;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bZQynM",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="sc-bZQynM kVrOBi"
                                    >
                                      (No Token)
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </CurrencyAmount>
                      </StyledComponent>
                    </Styled(CurrencyAmount)>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-kAzzGY",
                              "isStatic": true,
                              "lastClassName": "fWFmcx",
                              "rules": Array [
                                "
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 8px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-kAzzGY",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-kAzzGY fWFmcx"
                        >
                          <a>
                            <Styled(Icon)
                              name="DUPLICATE.svg"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-kgoBCf",
                                      "isStatic": true,
                                      "lastClassName": "dBWDWv",
                                      "rules": Array [
                                        "
  height: 15px;
  width: 15px;
  margin-left: 16px;
",
                                      ],
                                    },
                                    "displayName": "Styled(Icon)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-kgoBCf",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="DUPLICATE.svg"
                              >
                                <Icon
                                  className="sc-kgoBCf dBWDWv"
                                  name="DUPLICATE.svg"
                                >
                                  <img
                                    className="icon icon__DUPLICATE-svg sc-kgoBCf dBWDWv"
                                    src="test-file-stub"
                                  />
                                </Icon>
                              </StyledComponent>
                            </Styled(Icon)>
                          </a>
                          <a>
                            <Styled(Icon)
                              name="iconEdit.svg"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-kgoBCf",
                                      "isStatic": true,
                                      "lastClassName": "dBWDWv",
                                      "rules": Array [
                                        "
  height: 15px;
  width: 15px;
  margin-left: 16px;
",
                                      ],
                                    },
                                    "displayName": "Styled(Icon)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-kgoBCf",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                name="iconEdit.svg"
                              >
                                <Icon
                                  className="sc-kgoBCf dBWDWv"
                                  name="iconEdit.svg"
                                >
                                  <img
                                    className="icon icon__iconEdit-svg sc-kgoBCf dBWDWv"
                                    src="test-file-stub"
                                  />
                                </Icon>
                              </StyledComponent>
                            </Styled(Icon)>
                          </a>
                          <styled.span>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-kGXeez",
                                    "isStatic": true,
                                    "lastClassName": "gvljHD",
                                    "rules": Array [
                                      "
  display: inline-block; 
  height: 15px;
  width: 15px;
  margin-left: 16px;
",
                                    ],
                                  },
                                  "displayName": "styled.span",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-kGXeez",
                                  "target": "span",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <span
                                className="sc-kGXeez gvljHD"
                              />
                            </StyledComponent>
                          </styled.span>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Task>
`;
