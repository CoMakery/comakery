// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Project renders correctly without props 1`] = `
<Project
  awardTypesPath=""
  awardsPath=""
  contributorsPath=""
  csrfToken=""
  editPath={null}
  editable={true}
  interested={false}
  missionData={null}
  myTasksPath=""
  projectData={
    Object {
      "chartData": Array [],
      "contributors": Array [],
      "description": "",
      "stats": Object {},
      "teamLeader": Object {},
    }
  }
  specialtyInterested={Array []}
  tasksBySpecialty={
    Array [
      Array [
        null,
        Array [],
      ],
    ]
  }
  tokenData={null}
>
  <div
    className="project-container"
  >
    <div
      className="project-header"
      style={
        Object {
          "backgroundImage": "url(undefined)",
        }
      }
    >
      <div
        className="project-header__blur"
      />
      <div
        className="project-header__content"
      >
        <div
          className="project-header__menu"
        >
          <div
            className="project-header__menu__links"
          >
            <a
              className="project-header__menu__link"
              href=""
            >
              Edit This Project
            </a>
          </div>
        </div>
        <div
          className="project-header__name"
        >
           
           
        </div>
        <div
          className="project-header__owner"
        >
           by 
           
        </div>
      </div>
    </div>
    <div
      className="project-award"
    >
      <div
        className="project-contributors"
      >
        <div
          className="project-leader"
        >
          <div
            className="project-leader__info"
          >
            <div
              className="project-leader__title"
            >
              Team Leader
            </div>
             
          </div>
        </div>
        <div
          className="project-contributors__container"
        >
          <div
            className="project-contributor-container"
          >
            <img
              className="project-leader__avatar"
            />
            <div
              className="project-contributor__modal"
            >
              <ProfileModal
                displayInline={false}
                profile={Object {}}
              >
                <styled.div
                  inline={false}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "kOYido",
                          "rules": Array [
                            "
  display: flex;
  position: absolute;
  box-sizing: border-box;
  z-index: 9;
  left: -108px;
  bottom: 52px;
  width: 250px;
  padding: 12px;
  border-radius: 2px;
  box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.2);
  background-color: #ffffff;
  text-align: left;
  font-family: Montserrat, sans-serif;
  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  color: #3a3a3a;

  ",
                            [Function],
                            "

  &::after {
    position: absolute;
    display: block;
    content: '';
    z-index: 9;
    left: 50%;
    bottom: -8px;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 8px solid #ffffff;

    ",
                            [Function],
                            "
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    inline={false}
                  >
                    <div
                      className="sc-bdVaJa kOYido"
                    >
                      <styled.img>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": true,
                                "lastClassName": "isBoLd",
                                "rules": Array [
                                  "
  width: 45px;
  height: 45px;
  margin-right: 6px;
  border-radius: 50%;
  border: 1px solid #8d9599;
",
                                ],
                              },
                              "displayName": "styled.img",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "img",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <img
                            className="sc-bwzfXH isBoLd"
                          />
                        </StyledComponent>
                      </styled.img>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htpNat",
                                "isStatic": true,
                                "lastClassName": "hHtpcc",
                                "rules": Array [
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htpNat",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-htpNat hHtpcc"
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bxivhb",
                                      "isStatic": true,
                                      "lastClassName": "jDFUOQ",
                                      "rules": Array [
                                        "
  color: #8d9599;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bxivhb",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-bxivhb jDFUOQ"
                                />
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": true,
                                      "lastClassName": "jhSUeN",
                                      "rules": Array [
                                        "
  font-weight: bold;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX jhSUeN"
                                >
                                   
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "kSzTaY",
                                      "rules": Array [
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-EHOje kSzTaY"
                                />
                              </StyledComponent>
                            </styled.div>
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bZQynM",
                                      "isStatic": true,
                                      "lastClassName": "hYvRnQ",
                                      "rules": Array [
                                        "
  display: flex;
  margin-top: 1em;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bZQynM",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-bZQynM hYvRnQ"
                                />
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </ProfileModal>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="project-description"
    >
      <div
        className="project-description__video"
      >
        <img
          width="100%"
        />
      </div>
      <div
        className="project-description__text"
      >
        <div
          className="project-description__text--first"
        >
          .
        </div>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
        />
      </div>
    </div>
    <div
      className="project-interest"
    >
      <div
        className="project-stats__container"
      >
        <div
          className="mission-stats__kpis"
        >
          <div
            className="mission-stats__kpi"
          >
            <Icon
              className=""
              name="BATCH/WHITE.svg"
            >
              <img
                className="icon icon__BATCH/WHITE-svg"
                src="test-file-stub"
              />
            </Icon>
            <l
              className={null}
              count={1}
              plural="batches"
              showCount={true}
              singular="batch"
              style={Object {}}
              zero={null}
            >
              <span
                className={null}
                style={Object {}}
              >
                1 batch
              </span>
            </l>
          </div>
          <div
            className="mission-stats__kpi"
          >
            <Icon
              className=""
              name="TASK/WHITE.svg"
            >
              <img
                className="icon icon__TASK/WHITE-svg"
                src="test-file-stub"
              />
            </Icon>
            <l
              className={null}
              count={1}
              showCount={true}
              singular="task"
              style={Object {}}
              zero={null}
            >
              <span
                className={null}
                style={Object {}}
              >
                1 task
              </span>
            </l>
          </div>
          <div
            className="mission-stats__kpi"
          >
            <div
              className="mission-stats__contributor"
            />
            <l
              className={null}
              count={1}
              plural="people"
              showCount={true}
              singular="person"
              style={Object {}}
              zero={null}
            >
              <span
                className={null}
                style={Object {}}
              >
                1 person
              </span>
            </l>
             INTERESTED
          </div>
        </div>
      </div>
      <p
        className="project-interest__text"
      >
        Let the project leaders know that you are interested in the project so they can invite you to tasks that you are qualified for.
      </p>
      <button
        className="button project-interest__button"
        onClick={[Function]}
      >
        I’m Interested
      </button>
    </div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eHgmQL",
              "isStatic": true,
              "lastClassName": "bPHjA",
              "rules": Array [
                "
  padding: 15px;
  max-width: 980px;
  margin: auto;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eHgmQL",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-eHgmQL bPHjA"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cvbbAY",
                    "isStatic": true,
                    "lastClassName": "cnUfLC",
                    "rules": Array [
                      "
  margin: 40px;

  h2 {
    font-family: Montserrat;
    font-size: 24px;
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    text-transform: uppercase;
    color: #3a3a3a;
  }

  p {
    font-family: Georgia;
    font-size: 16px;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    line-height: 1.63;
    letter-spacing: normal;
    text-align: center;
    color: #4a4a4a;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-cvbbAY",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-cvbbAY cnUfLC"
              >
                <h2>
                  Available Tasks
                </h2>
                <p>
                  Find a task that’s right for your talents, review the details, and get to work!
                </p>
              </div>
            </StyledComponent>
          </styled.div>
          <styled.div
            key="null"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jWBwVP",
                    "isStatic": true,
                    "lastClassName": "graUqB",
                    "rules": Array [
                      "
  margin-top: 40px;

  h3 {
    font-family: Montserrat;
    font-size: 20px;
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    color: #4a4a4a;
    text-transform: uppercase;

    img {
      display: block;
      margin: auto;
      margin-bottom: 10px;
      max-height: 30px;
      max-width: 30px;
    }
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jWBwVP",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-jWBwVP graUqB"
              >
                <h3>
                  <img
                    src="test-file-stub"
                  />
                </h3>
              </div>
            </StyledComponent>
          </styled.div>
          <styled.a
            href=""
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-brqgnP",
                    "isStatic": true,
                    "lastClassName": "gwvVjg",
                    "rules": Array [
                      "
  font-family: Montserrat;
  font-size: 14px;
  font-weight: 900;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  text-transform: uppercase;
  text-decoration: none;
  color: #0089f4;
  display: block;
  text-align: right;
  margin-top: 60px;
  margin-bottom: 10px;

  &:hover {
    text-decoration: underline;
  }
",
                    ],
                  },
                  "displayName": "styled.a",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-brqgnP",
                  "target": "a",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              href=""
            >
              <a
                className="sc-brqgnP gwvVjg"
                href=""
              >
                see all available tasks
              </a>
            </StyledComponent>
          </styled.a>
        </div>
      </StyledComponent>
    </styled.div>
    <div
      className="project-team"
    >
      <div
        className="project-team__container"
      >
        <div
          className="project-team__title"
        >
          The Team
        </div>
        <div
          className="project-team__subtitle"
        >
          Great projects are the result of dozens to hundreds of individual tasks being completed with skill and care. Check out the people that have made this project special with their individual contributions.
        </div>
        <div
          className="project-chart"
        >
          <div
            className="tooltip-hidden"
            id="tooltip"
          >
            <span
              id="value"
            >
              100
            </span>
          </div>
        </div>
        <div
          className="project-team__contributors-container"
        >
          <div
            className="project-team__leader-name"
          >
            Team Leader
          </div>
           
          <div
            className="project-team__contributors"
          >
            <div
              className="project-team__contributor-container"
            >
              <img
                className="project-team__leader-avatar"
              />
              <div
                className="project-team__contributor__modal"
              >
                <ProfileModal
                  displayInline={false}
                  profile={Object {}}
                >
                  <styled.div
                    inline={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "kOYido",
                            "rules": Array [
                              "
  display: flex;
  position: absolute;
  box-sizing: border-box;
  z-index: 9;
  left: -108px;
  bottom: 52px;
  width: 250px;
  padding: 12px;
  border-radius: 2px;
  box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.2);
  background-color: #ffffff;
  text-align: left;
  font-family: Montserrat, sans-serif;
  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  color: #3a3a3a;

  ",
                              [Function],
                              "

  &::after {
    position: absolute;
    display: block;
    content: '';
    z-index: 9;
    left: 50%;
    bottom: -8px;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 8px solid #ffffff;

    ",
                              [Function],
                              "
  }
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inline={false}
                    >
                      <div
                        className="sc-bdVaJa kOYido"
                      >
                        <styled.img>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": true,
                                  "lastClassName": "isBoLd",
                                  "rules": Array [
                                    "
  width: 45px;
  height: 45px;
  margin-right: 6px;
  border-radius: 50%;
  border: 1px solid #8d9599;
",
                                  ],
                                },
                                "displayName": "styled.img",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "img",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <img
                              className="sc-bwzfXH isBoLd"
                            />
                          </StyledComponent>
                        </styled.img>
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-htpNat",
                                  "isStatic": true,
                                  "lastClassName": "hHtpcc",
                                  "rules": Array [
                                    "
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-htpNat",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-htpNat hHtpcc"
                            >
                              <styled.div>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bxivhb",
                                        "isStatic": true,
                                        "lastClassName": "jDFUOQ",
                                        "rules": Array [
                                          "
  color: #8d9599;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bxivhb",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-bxivhb jDFUOQ"
                                  />
                                </StyledComponent>
                              </styled.div>
                              <styled.div>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-ifAKCX",
                                        "isStatic": true,
                                        "lastClassName": "jhSUeN",
                                        "rules": Array [
                                          "
  font-weight: bold;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-ifAKCX",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-ifAKCX jhSUeN"
                                  >
                                     
                                  </div>
                                </StyledComponent>
                              </styled.div>
                              <styled.div>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-EHOje",
                                        "isStatic": true,
                                        "lastClassName": "kSzTaY",
                                        "rules": Array [
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-EHOje",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-EHOje kSzTaY"
                                  />
                                </StyledComponent>
                              </styled.div>
                              <styled.div>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bZQynM",
                                        "isStatic": true,
                                        "lastClassName": "hYvRnQ",
                                        "rules": Array [
                                          "
  display: flex;
  margin-top: 1em;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bZQynM",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-bZQynM hYvRnQ"
                                  />
                                </StyledComponent>
                              </styled.div>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ProfileModal>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="project-interest"
    >
      <p
        className="project-interest__text"
      >
        Let the project leaders know that you are interested in the project so they can invite you to tasks that you are qualified for.
      </p>
      <button
        className="button project-interest__button"
        onClick={[Function]}
      >
        I’m Interested
      </button>
    </div>
  </div>
</Project>
`;
