// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Project renders correctly without props 1`] = `
<Project
  awardsPath=""
  contributorsPath=""
  csrfToken=""
  editPath={null}
  interested={false}
  missionData={null}
  myTasksPath=""
  projectData={
    Object {
      "chartData": Array [],
      "contributors": Array [],
      "description": "",
      "teamLeader": Object {},
    }
  }
  specialtyInterested={Array []}
  tasksBySpecialty={
    Array [
      Array [
        null,
        Array [],
      ],
    ]
  }
  tokenData={null}
>
  <div
    className="project-container"
  >
    <div
      className="project-header"
      style={
        Object {
          "backgroundImage": "url(undefined)",
        }
      }
    >
      <div
        className="project-header__blur"
      />
      <div
        className="project-header__content"
      >
        <div
          className="project-header__menu"
        >
          <div
            className="project-header__menu__links"
          />
        </div>
        <div
          className="project-header__name"
        >
           
           
        </div>
        <div
          className="project-header__owner"
        >
           by 
           
        </div>
      </div>
    </div>
    <div
      className="project-award"
    >
      <div
        className="project-contributors"
      >
        <div
          className="project-leader"
        >
          <div
            className="project-leader__info"
          >
            <div
              className="project-leader__title"
            >
              Team Leader
            </div>
             
          </div>
          <img
            className="project-leader__avatar"
          />
        </div>
        <div
          className="project-contributors__container"
        >
          <img
            className="project-leader__avatar project-leader__avatar--mobile"
          />
        </div>
      </div>
    </div>
    <div
      className="project-description"
    >
      <div
        className="project-description__video"
      >
        <img
          width="100%"
        />
      </div>
      <div
        className="project-description__text"
      >
        <div
          className="project-description__text--first"
        >
          .
        </div>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
        />
      </div>
    </div>
    <div
      className="project-interest"
    >
      <p
        className="project-interest__text"
      >
        Let the project leaders know that you are interested in the project so they can invite you to tasks that you are qualified for.
      </p>
      <button
        className="button project-interest__button"
        onClick={[Function]}
      >
        I’m Interested
      </button>
    </div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ckVGcZ",
              "isStatic": true,
              "lastClassName": "jTtBZk",
              "rules": Array [
                "
  padding: 15px;
  max-width: 980px;
  margin: auto;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ckVGcZ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-ckVGcZ jTtBZk"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jKJlTe",
                    "isStatic": true,
                    "lastClassName": "bhUkOZ",
                    "rules": Array [
                      "
  margin: 40px;

  h2 {
    font-family: Montserrat;
    font-size: 24px;
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    text-transform: uppercase;
    color: #3a3a3a;
  }

  p {
    font-family: Georgia;
    font-size: 16px;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    line-height: 1.63;
    letter-spacing: normal;
    text-align: center;
    color: #4a4a4a;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jKJlTe",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-jKJlTe bhUkOZ"
              >
                <h2>
                  Available Tasks
                </h2>
                <p>
                  Find a task that’s right for your talents, review the details, and get to work!
                </p>
              </div>
            </StyledComponent>
          </styled.div>
          <styled.div
            key="null"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-eNQAEJ",
                    "isStatic": true,
                    "lastClassName": "ePQpLa",
                    "rules": Array [
                      "
  margin-top: 40px;

  h3 {
    font-family: Montserrat;
    font-size: 20px;
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    color: #4a4a4a;
    text-transform: uppercase;

    img {
      display: block;
      margin: auto;
      margin-bottom: 10px;
      max-height: 30px;
      max-width: 30px;
    }
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-eNQAEJ",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-eNQAEJ ePQpLa"
              >
                <h3>
                  <img
                    src="test-file-stub"
                  />
                </h3>
              </div>
            </StyledComponent>
          </styled.div>
          <styled.a
            href=""
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": true,
                    "lastClassName": "fZwmQG",
                    "rules": Array [
                      "
  font-family: Montserrat;
  font-size: 14px;
  font-weight: 900;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  text-transform: uppercase;
  text-decoration: none;
  color: #0089f4;
  display: block;
  text-align: right;
  margin-top: 60px;
  margin-bottom: 10px;

  &:hover {
    text-decoration: underline;
  }
",
                    ],
                  },
                  "displayName": "styled.a",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "a",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              href=""
            >
              <a
                className="sc-hMqMXs fZwmQG"
                href=""
              >
                see all available tasks
              </a>
            </StyledComponent>
          </styled.a>
        </div>
      </StyledComponent>
    </styled.div>
    <div
      className="project-team"
    >
      <div
        className="project-team__container"
      >
        <div
          className="project-team__title"
        >
          The Team
        </div>
        <div
          className="project-team__subtitle"
        >
          Great projects are the result dozens to hundreds of individual tasks being completed with skill and care. Check out the people that have made this project special with their individual contributions.
        </div>
        <div
          className="project-chart"
        >
          <div
            className="tooltip-hidden"
            id="tooltip"
          >
            <span
              id="value"
            >
              100
            </span>
          </div>
        </div>
        <div
          className="project-team__contributors-container"
        >
          <div
            className="project-team__leader-name"
          >
            Team Leader
          </div>
           
          <div
            className="project-team__contributors"
          >
            <img
              className="project-team__leader-avatar"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="project-interest"
    >
      <p
        className="project-interest__text"
      >
        Let the project leaders know that you are interested in the project so they can invite you to tasks that you are qualified for.
      </p>
      <button
        className="button project-interest__button"
        onClick={[Function]}
      >
        I’m Interested
      </button>
    </div>
  </div>
</Project>
`;
