// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Project renders correctly without props 1`] = `
<Project
  awardTypesPath=""
  awardsPath=""
  contributorsPath=""
  csrfToken=""
  editPath={null}
  editable={true}
  interested={false}
  missionData={null}
  missionForHeader={null}
  myTasksPath=""
  projectData={
    Object {
      "chartData": Array [],
      "description": "",
      "displayTeam": true,
      "stats": Object {},
      "team": Array [],
      "teamSize": 0,
    }
  }
  projectForHeader={null}
  specialtyInterested={Array []}
  tasksBySpecialty={
    Array [
      Array [
        null,
        Array [],
      ],
    ]
  }
  tokenData={null}
>
  <div
    className="project-container animated fadeIn faster"
  >
    <ProjectSetupHeader
      current="overview"
      expanded={true}
      missionForHeader={null}
      owner={true}
      projectForHeader={null}
    >
      <styled.div
        backgroundImageUrl={null}
        expanded={true}
      >
        <StyledComponent
          backgroundImageUrl={null}
          expanded={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htoDjs",
                "isStatic": false,
                "lastClassName": "eAvYzW",
                "rules": Array [
                  "
  font-size: 16px;
  font-weight: bold;
  color: white;
  cursor: default;
  margin-bottom: 1em;
  background-color: #201662;
  background-image: url(",
                  [Function],
                  ");
  background-position-x: 50%;
  background-position-y: center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 150px;
  display: flex;
  flex-direction: column;
  text-shadow: 1px 1px 1px #3a3a3a;
  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);

  ",
                  [Function],
                  "
  
    @media (max-width: 640px) {
      margin-left: -25px;
      margin-right: -25px;
    }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htoDjs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-htoDjs eAvYzW"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-dnqmqq",
                      "isStatic": true,
                      "lastClassName": "hzJpwN",
                      "rules": Array [
                        "
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  margin: 0.7em;

  @media (max-width: 640px) {
    flex-direction: column;
  }
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-dnqmqq",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="sc-dnqmqq hzJpwN"
                />
              </StyledComponent>
            </styled.div>
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-VigVT",
                      "isStatic": true,
                      "lastClassName": "epdllf",
                      "rules": Array [
                        "
  align-items: center;
  justify-content: center;
  display: flex;
  flex-grow: 2;
  flex-direction: column;

  img {
    max-height: 150px;
    margin-bottom: -50px;
    margin-top: 25px;
    border-radius: 2px;
    box-shadow: 0 10px 20px 0 rgba(32,22,98,.1);
  }

  h1 {
    font-size: 32px;
    font-style: normal;
    font-stretch: normal;
    letter-spacing: normal;
    text-align: center;
    min-height: 100px;
    display: flex;
    align-items: center;
  }

  h2 {
    font-size: 18px;
    text-transform: capitalize;
    font-style: normal;
    font-stretch: normal;
    letter-spacing: normal;
    text-align: center;
    min-height: 100px;
    display: flex;
    align-items: center;
    margin-top: -50px;
  }
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-VigVT",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="sc-VigVT epdllf"
                >
                  <h1>
                    New Project
                  </h1>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ProjectSetupHeader>
    <div
      className="project-award"
    >
      <button
        className="button project-interest__button"
        onClick={[Function]}
      >
        Follow
      </button>
      <div
        className="project-team"
      >
        <div
          className="project-team__container"
        >
          <div
            className="project-team__contributors-container"
          >
            <div
              className="project-team__contributors"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="project-description"
    >
      <div
        className="project-description__video"
      />
      <div
        className="project-description__text"
      >
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": undefined,
            }
          }
        />
      </div>
    </div>
    <div
      className="project-award"
    />
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jDwBTQ",
              "isStatic": true,
              "lastClassName": "hkJMHo",
              "rules": Array [
                "
  padding: 15px;
  max-width: 980px;
  margin: auto;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jDwBTQ",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-jDwBTQ hkJMHo"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gPEVay",
                    "isStatic": true,
                    "lastClassName": "glPcoY",
                    "rules": Array [
                      "
  margin: 40px;

  h2 {
    font-family: Montserrat;
    font-size: 24px;
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    text-transform: uppercase;
    color: #3a3a3a;
  }

  p {
    font-family: Georgia;
    font-size: 16px;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    line-height: 1.63;
    letter-spacing: normal;
    text-align: center;
    color: #4a4a4a;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gPEVay",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-gPEVay glPcoY"
              >
                <h2>
                  Tasks
                </h2>
                <p>
                  Find a task thatâ€™s right for your talents, review the details, and get to work!
                </p>
              </div>
            </StyledComponent>
          </styled.div>
          <styled.div
            key="null"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-iRbamj",
                    "isStatic": true,
                    "lastClassName": "gibNVz",
                    "rules": Array [
                      "
  margin-top: 40px;
  margin-bottom: 60px;

  h3 {
    font-family: Montserrat;
    font-size: 20px;
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    color: #4a4a4a;
    text-transform: uppercase;

    img {
      display: block;
      margin: auto;
      margin-bottom: 10px;
      max-height: 30px;
      max-width: 30px;
    }
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-iRbamj",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-iRbamj gibNVz"
              >
                <h3 />
              </div>
            </StyledComponent>
          </styled.div>
          <styled.a
            href=""
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jlyJG",
                    "isStatic": true,
                    "lastClassName": "Rhqti",
                    "rules": Array [
                      "
  font-family: Montserrat;
  font-size: 14px;
  font-weight: 900;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  text-transform: uppercase;
  text-decoration: none;
  color: #0089f4;
  display: block;
  text-align: right;
  margin-top: 20px;
  margin-bottom: 10px;

  &:hover {
    text-decoration: underline;
  }
",
                    ],
                  },
                  "displayName": "styled.a",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jlyJG",
                  "target": "a",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              href=""
            >
              <a
                className="sc-jlyJG Rhqti"
                href=""
              >
                see all available tasks
              </a>
            </StyledComponent>
          </styled.a>
        </div>
      </StyledComponent>
    </styled.div>
    <div
      className="project-team"
    >
      <div
        className="project-team__container"
      >
        <div
          className="project-team__title"
        >
          The Team
        </div>
        <div
          className="project-team__subtitle"
        >
          Great projects are the result of dozens to hundreds of individual tasks being completed with skill and care. Check out the people that have made this project special with their individual contributions.
        </div>
        <div
          className="project-chart"
        >
          <div
            className="tooltip-hidden"
            id="tooltip"
          />
        </div>
        <div
          className="project-team__contributors-container"
        >
          <div
            className="project-team__contributors"
          />
        </div>
      </div>
    </div>
    <div
      className="project-interest"
    >
      <p
        className="project-interest__text"
      >
        Let the project leaders know that you are interested in the project so they can invite you to tasks that you are qualified for.
      </p>
      <button
        className="button project-interest__button"
        onClick={[Function]}
      >
        Iâ€™m Interested
      </button>
    </div>
  </div>
</Project>
`;
