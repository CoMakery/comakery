// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyTasks renders component correctly 1`] = `
<MyTasks
  filters={Array []}
  paginationHtml=""
  pastAwardsUrl=""
  tasks={Array []}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ckVGcZ",
            "isStatic": true,
            "lastClassName": "diVyLK",
            "rules": Array [
              "
  background-color: white;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ckVGcZ",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-ckVGcZ diVyLK"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-eNQAEJ",
                  "isStatic": true,
                  "lastClassName": "eOHGDW",
                  "rules": Array [
                    "
  height: 140px;
  background-image: url(",
                    "test-file-stub",
                    ");
  background-position: center;
  background-size: cover;
  font-family: Montserrat;
  font-size: 30px;
  font-weight: 900;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  letter-spacing: normal;
  text-align: center;
  color: #ffffff;
  text-transform: uppercase;
  display: flex;
  flex-direction: column;
  justify-content: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-eNQAEJ",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-eNQAEJ eOHGDW"
            >
              My Tasks
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jKJlTe",
                  "isStatic": true,
                  "lastClassName": "UMbut",
                  "rules": Array [
                    "
  background-color: white;
  padding: 25px 150px 25px 150px;
  min-height: 50vh;
  max-width: 980px;
  margin: auto;

  @media (max-width: 1024px) {
    padding: 25px 15px 25px 15px;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jKJlTe",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-jKJlTe UMbut"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-hMqMXs",
                        "isStatic": true,
                        "lastClassName": "klCJRz",
                        "rules": Array [
                          "
  text-align: right;
  width: 100%;

  a {
    font-family: Montserrat;
    font-size: 12px;
    font-weight: bold;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    color: #0089f4;
    text-decoration: none;
    text-transform: uppercase;

    &:hover {
      text-decoration: underline;
    }
  }
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-hMqMXs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-hMqMXs klCJRz"
                  >
                    <a
                      href=""
                    >
                      See past awards
                    </a>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kEYyzF",
                        "isStatic": true,
                        "lastClassName": "jSuCvT",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin: 25px 0;
  background-color: #ffffff;

  @media (max-width: 1024px) {
    background: none;
    position: sticky;
    top: 25px;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    margin: 0 -15px;
    padding: 10px;
    z-index: 200;
  }

  &::-webkit-scrollbar {
    display: none;
  }
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-kEYyzF",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-kEYyzF jSuCvT"
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "",
                  }
                }
              >
                <StyledComponent
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "",
                    }
                  }
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iAyFgw",
                        "isStatic": true,
                        "lastClassName": "YMnNn",
                        "rules": Array [
                          "
  text-align: right;
  width: 100%;
  padding: 15px 0;
  border-bottom: 1px solid #d8d8d8;
  margin-bottom: 35px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-iAyFgw",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-iAyFgw YMnNn"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "",
                      }
                    }
                  />
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</MyTasks>
`;
