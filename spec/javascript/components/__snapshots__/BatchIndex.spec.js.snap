// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BatchIndex renders correctly without props 1`] = `
<BatchIndex
  batches={Array []}
  editable={true}
  missionForHeader={null}
  newBatchPath=""
  project={Object {}}
  projectForHeader={null}
>
  <ProjectSetup
    className="batch-index"
    current="batches"
    missionForHeader={null}
    observer={true}
    owner={true}
    projectForHeader={null}
    sidebar={
      <React.Fragment>
        <div
          className="batch-index--sidebar"
        >
          <a
            href=""
          >
            <SidebarItemBold
              className="batch-index--sidebar--item__bold"
              iconLeftName="BATCH/WHITE.svg"
              iconRightName="PLUS.svg"
              text="Create a New Batch"
            />
          </a>
          <ForwardRef(styled.div)>
            <ForwardRef(styled.div)>
              <div>
                allocated budget
              </div>
              <CurrencyAmount
                amount=""
                currency={null}
                logoUrl=""
              />
            </ForwardRef(styled.div)>
          </ForwardRef(styled.div)>
        </div>
      </React.Fragment>
    }
    subfooter={null}
  >
    <Layout
      category=""
      className="project-setup batch-index"
      customTitle={
        <ProjectSetupHeader
          current="batches"
          expanded={false}
          missionForHeader={null}
          observer={true}
          owner={true}
          projectForHeader={null}
        />
      }
      hasBackButton={false}
      sidebar={
        <React.Fragment>
          <div
            className="batch-index--sidebar"
          >
            <a
              href=""
            >
              <SidebarItemBold
                className="batch-index--sidebar--item__bold"
                iconLeftName="BATCH/WHITE.svg"
                iconRightName="PLUS.svg"
                text="Create a New Batch"
              />
            </a>
            <ForwardRef(styled.div)>
              <ForwardRef(styled.div)>
                <div>
                  allocated budget
                </div>
                <CurrencyAmount
                  amount=""
                  currency={null}
                  logoUrl=""
                />
              </ForwardRef(styled.div)>
            </ForwardRef(styled.div)>
          </div>
        </React.Fragment>
      }
      subfooter={null}
      title={null}
    >
      <div
        className="layout project-setup batch-index"
      >
        <div
          className="layout--content"
        >
          <div
            className="layout--content--title"
          >
            <ProjectSetupHeader
              current="batches"
              expanded={false}
              missionForHeader={null}
              observer={true}
              owner={true}
              projectForHeader={null}
            >
              <styled.div
                backgroundImageUrl={null}
                expanded={false}
              >
                <StyledComponent
                  backgroundImageUrl={null}
                  expanded={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "efrfjy",
                        "rules": Array [
                          "
  font-size: 16px;
  font-weight: bold;
  color: white;
  cursor: default;
  margin-bottom: 1em;
  background-color: #201662;
  background-image: url(",
                          [Function],
                          ");
  background-position-x: 50%;
  background-position-y: center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 150px;
  display: flex;
  flex-direction: column;
  text-shadow: 1px 1px 1px #3a3a3a;
  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);

  ",
                          [Function],
                          "

    @media (max-width: 640px) {
      margin-left: -25px;
      margin-right: -25px;
    }
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-bdVaJa efrfjy"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": false,
                              "lastClassName": "kAVJJi",
                              "rules": Array [
                                "
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  margin: 0.7em;

  @media (max-width: 640px) {
    flex-direction: column;
  }
",
                              ],
                            },
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-bwzfXH kAVJJi"
                        />
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-EHOje",
                              "isStatic": false,
                              "lastClassName": "jyVnUS",
                              "rules": Array [
                                "
  align-items: center;
  justify-content: center;
  display: flex;
  flex-grow: 2;
  flex-direction: column;

  .token-logo {
    max-height: 150px;
    border-radius: 2px;
    box-shadow: 0 10px 20px 0 rgba(32,22,98,.1);
  }

  h1 {
    font-size: 32px;
    font-style: normal;
    font-stretch: normal;
    letter-spacing: normal;
    align-items: center;
  }

  h2 {
    font-size: 18px;
    text-transform: capitalize;
    font-style: normal;
    font-stretch: normal;
    letter-spacing: normal;
    min-height: 100px;
    display: flex;
    align-items: center;
    margin-top: -50px;
  }

  .token-details {
    font-size: 12px;
    text-align: center;
  }

  .token-details-hw-address {
    color: white;
    text-decoration: underline;
    padding: 0 1em;
  }

  .token-details-hw-address:hover {
    text-decoration: none;
  }
",
                              ],
                            },
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-EHOje",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-EHOje jyVnUS"
                        >
                          <h1>
                            New Project
                          </h1>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </ProjectSetupHeader>
          </div>
          <div
            className="layout--content--wrapper"
          >
            <div
              className="layout--content--sidebar"
            >
              <div
                className="batch-index--sidebar"
              >
                <a
                  href=""
                >
                  <SidebarItemBold
                    className="batch-index--sidebar--item__bold"
                    iconLeftName="BATCH/WHITE.svg"
                    iconRightName="PLUS.svg"
                    text="Create a New Batch"
                  >
                    <SidebarItem
                      className="sidebar-item__bold batch-index--sidebar--item__bold"
                      iconLeftName="BATCH/WHITE.svg"
                      iconLeftUrl=""
                      iconRightName="PLUS.svg"
                      notificationColor=""
                      selected={false}
                      text="Create a New Batch"
                    >
                      <div
                        className="sidebar-item--wrapper"
                      >
                        <div
                          className="sidebar-item sidebar-item__bold batch-index--sidebar--item__bold"
                        >
                          <span
                            className="sidebar-item--icon-left"
                          >
                            <Icon
                              className=""
                              name="BATCH/WHITE.svg"
                            >
                              <img
                                className="icon-legacy icon__BATCH/WHITE-svg"
                                src="test-file-stub"
                              />
                            </Icon>
                          </span>
                          <div
                            className="sidebar-item--content"
                          >
                            <div
                              className="sidebar-item--text"
                            >
                              Create a New Batch
                            </div>
                            <div
                              className="sidebar-item--subchild"
                            />
                          </div>
                          <span
                            className="sidebar-item--icon-right"
                          >
                            <Icon
                              className=""
                              name="PLUS.svg"
                            >
                              <img
                                className="icon-legacy icon__PLUS-svg"
                                src="test-file-stub"
                              />
                            </Icon>
                          </span>
                          <div
                            className="sidebar-item--left-border"
                          />
                          <div
                            className="sidebar-item--right-border sidebar-item--right-border__"
                          />
                        </div>
                      </div>
                    </SidebarItem>
                  </SidebarItemBold>
                </a>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-kjoXOD",
                          "isStatic": false,
                          "lastClassName": "fOppPq",
                          "rules": Array [
                            "
  margin: 1em 0;
  margin-right: 1em;
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-kjoXOD",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-kjoXOD fOppPq"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cHGsZl",
                                "isStatic": false,
                                "lastClassName": "keqKYA",
                                "rules": Array [
                                  "
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
  color: #3a3a3a;
  margin: 1em 0;
",
                                ],
                              },
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cHGsZl",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-cHGsZl keqKYA"
                          >
                            <div>
                              allocated budget
                            </div>
                            <CurrencyAmount
                              amount=""
                              currency={null}
                              logoUrl=""
                            >
                              <styled.div>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "eXyKsn",
                                        "rules": Array [
                                          "
  display: flex;
  flex-direction: row;
  align-items: center;
  font-family: Montserrat;
  font-size: 14px;
  font-weight: 500;
  color: #4a4a4a;
",
                                        ],
                                      },
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-dnqmqq eXyKsn"
                                  >
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-iwsKbI",
                                              "isStatic": false,
                                              "lastClassName": "jnZZpz",
                                              "rules": Array [
                                                "
  margin-right: 0.5em;
",
                                              ],
                                            },
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-iwsKbI",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="sc-iwsKbI jnZZpz"
                                        />
                                      </StyledComponent>
                                    </styled.div>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </CurrencyAmount>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </div>
            <div
              className="layout--content--content__sidebared animated fadeIn faster"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jhAzac",
                        "isStatic": false,
                        "lastClassName": "jgHruR",
                        "rules": Array [
                          "
  font-family: Georgia;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.29;
  letter-spacing: normal;

  ul {
    list-style-type: decimal;
  }

  a {
    color: #0089f4;
    text-decoration: none;
  }

  a:hover,
  a:focus {
    text-decoration: underline;
  }
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jhAzac",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-jhAzac jgHruR"
                  >
                    <ul>
                      <li>
                        Batches are “folders” that groups of similar tasks reside in.
                      </li>
                      <li>
                        Projects can have one or many batches in them.
                      </li>
                      <li>
                        A batch must be 
                        <a
                          href=""
                        >
                          created
                        </a>
                         before a task can be created.
                      </li>
                    </ul>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  </ProjectSetup>
</BatchIndex>
`;
