# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: RSpec

on:
  push:
#   pull_request:
#     branches: [ acceptance, master ]
#   schedule:
#     - cron: "0 2 * * 1-5"

jobs:
  rspec:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: [2.7.1]
        node: [12.x]
        ci_node_total: [10]
        ci_node_index: [0, 1, 2, 3, 4,5,6,7,8,9]

    env:
      KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC }}
      KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
      KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
      KNAPSACK_PRO_FIXED_QUEUE_SPLIT: "true"
      BUNDLER_VERSION: 2.2.3
      RACK_ENV: test
      RAILS_ENV: test
      SECRET_KEY_BASE: dummy
      DATABASE_URL: postgres://rails@localhost:5432/rails
      AWS_API_KEY: dummy
      AWS_API_SECRET: dummy
      BLOCK_EXPLORER_URL_CONSTELLATION_MAINNET: none
      BLOCK_EXPLORER_URL_CONSTELLATION_TESTNET: dummy
      DISCORD_CLIENT_ID: none
      DISCORD_CLIENT_SECRET: none
      INFURA_PROJECT_ID: 39f6ad316c5a4b87a0f90956333c3666
      ORE_ID_API_KEY: none
      ORE_ID_SERVICE_KEY: none
      SLACK_API_KEY: none
      SLACK_API_SECRET: none
      REFILE_S3_REGION: dummy
      REFILE_S3_BUCKET: dummy
      SIMPLECOV_ENABLED: true
      # Settings -> Secrets
      # INFURA_PROJECT_ID: ${{ secrets.InfuraProjectId }}

    services:
      postgres:
        image: postgres:10.1-alpine
        env:
          POSTGRES_USER: rails
          POSTGRES_DB: rails
          POSTGRES_PASSWORD: ""
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

      redis:
        image: redis:5.0.6-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Use a specific Yarn version
      run: yarn policies set-version 1.12.3

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Node dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ matrix.node }}-yarn-

    - name: Install Node dependencies
      run: yarn install

    - name: Install OS dependenices
      run: sudo apt-get install libpq-dev libssl-dev graphviz imagemagick

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Assets Cache
      id: assets-cache
      uses: actions/cache@v2
      with:
        path: public/assets
        key: ${{ runner.os }}-${{ matrix.ruby }}-assets-

    - name: Webpack Cache
      id: webpack-cache
      uses: actions/cache@v2
      with:
        path: public/packs
        key: ${{ runner.os }}-${{ matrix.ruby }}-packs-

    - name: Run dev asset server
      run: nohup env bin/webpack-dev-server &

    - name: Setup database
      run: env bundle exec rails db:create

    - name: Run migrations
      run: env bundle exec rails db:migrate

    - name: Run tests
      run: env bundle exec rake knapsack_pro:queue:rspec

    - name: Retry failed tests
      run: env bundle exec rspec --only-failures

    - name: Upload a Build Artifact
      if: always()
      uses: actions/upload-artifact@v2.2.1
      with:
        name: coverage_${{ matrix.ci_node_index }}
        path: coverage/

  simplecov:
    runs-on: ubuntu-latest
    needs: rspec

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Run Simplecov
        run: env bundle exec rake coverage:ci_report

      - name: Upload a Build Artifact
        if: always()
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Total Coverage
          path: coverage/

